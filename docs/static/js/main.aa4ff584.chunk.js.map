{"version":3,"sources":["contexts/TodoListContext.jsx","components/Header.jsx","components/TasksList.jsx","App.jsx","index.js"],"names":["TodoListContext","createContext","TodoListProvider","props","useState","taskTitle","setTaskTitle","listaDeTarefas","setListaDeTarefas","useEffect","minhaLista","localStorage","getItem","JSON","parse","Provider","value","handleCreateNewTask","event","preventDefault","title","isDone","setItem","stringify","handleRemoveTask","indiceTarefa","novaListaDeTarefas","filter","tarefa","index","handleChangeTaskStatus","newTarefas","map","children","Header","useContext","className","onSubmit","type","onChange","target","onClick","TasksList","readOnly","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAEaA,EAAkBC,wBAAc,IAiE9BC,EA/DU,SAACC,GAAW,IAAD,EACAC,mBAAS,IADT,mBAC3BC,EAD2B,KAChBC,EADgB,OAEUF,mBAAS,IAFnB,mBAE3BG,EAF2B,KAEXC,EAFW,KAIlCC,qBAAU,WACR,IAAMC,EAAaC,aAAaC,QAAQ,oBAEpCF,GACFF,EAAkBK,KAAKC,MAAMJ,MAG9B,IAsCH,OACE,cAACV,EAAgBe,SAAjB,CAA0BC,MAAQ,CAChCX,YACAC,eACAW,oBAvCwB,SAACC,GAC3BA,EAAMC,iBACNX,EAAkB,GAAD,mBAAKD,GAAL,CAAqB,CACpCa,MAAOf,EAAWgB,QAAQ,MAG5BV,aAAaW,QACX,mBACAT,KAAKU,UAAL,sBAAmBhB,GAAnB,CAAmC,CACjCa,MAAOf,EAAWgB,QAAQ,OAI9Bf,EAAa,KA2BXC,iBACAiB,iBAzBqB,SAACC,GACxB,IAAMC,EAAqBnB,EAAeoB,QAAO,SAACC,EAAQC,GACxD,OAAOA,IAAUJ,KAGnBjB,EAAkBkB,GAClBf,aAAaW,QAAQ,mBAAoBT,KAAKU,UAAUG,KAoBtDI,uBAjB2B,SAACL,GAC9B,IAAMM,EAAaxB,EAAeyB,KAAI,SAACJ,EAAQC,GAC7C,OAAOA,IAAUJ,EAAV,2BACEG,GADF,IACUP,QAASO,EAAOP,SAC7BO,KAGNpB,EAAkBuB,KAIlB,SAQI5B,EAAM8B,YC1BCC,G,MA7BA,WAAO,IAAD,EACsCC,qBAAWnC,GAA5DK,EADW,EACXA,UAAWC,EADA,EACAA,aAAcW,EADd,EACcA,oBAEjC,OACE,wBAAQmB,UAAU,cAAlB,SACE,sBAAKA,UAAU,iBAAf,UACE,wCAEA,uBAAMC,SAAUpB,EAAhB,UACE,uBACEqB,KAAK,OACLF,UAAU,QACVpB,MAAOX,EACPkC,SAAU,SAACrB,GAAYZ,EAAaY,EAAMsB,OAAOxB,UAGnD,wBACEsB,KAAK,SACLF,UAAU,eACVK,QAASxB,EAHX,SAKI,cAAC,IAAD,gB,QCoBCyB,G,MAzCG,WAAO,IAAD,EAKlBP,qBAAWnC,GAHbO,EAFoB,EAEpBA,eACAiB,EAHoB,EAGpBA,iBACAM,EAJoB,EAIpBA,uBAGF,OACE,qBAAKM,UAAU,YAAf,SACE,sBAAKA,UAAU,QAAf,UACE,gDAEA,oBAAIA,UAAU,OAAd,SACI7B,EAAeyB,KAAI,SAACJ,EAAQC,GAAT,OACnB,+BACE,uBACES,KAAK,WACLtB,MAAOY,EAAOP,OACdkB,SAAU,kBAAMT,EAAuBD,MAGzC,uBACES,KAAK,OACLF,UAAS,UAAKR,EAAOP,OAAS,SAAW,IACzCL,MAAOY,EAAOR,MACduB,UAAU,IAGZ,wBACEF,QAAS,kBAAMjB,EAAiBK,IADlC,SAGE,cAAC,IAAD,QAjBKA,e,MCNNe,MATf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCNNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aa4ff584.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\n\nexport const TodoListContext = createContext({});\n\nconst TodoListProvider = (props) => {\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [listaDeTarefas, setListaDeTarefas] = useState([]);\n\n  useEffect(() => {\n    const minhaLista = localStorage.getItem('lista-de-tarefas');\n\n    if (minhaLista) {\n      setListaDeTarefas(JSON.parse(minhaLista));\n    }\n\n  }, []);\n\n  // Essa função vai ser chamada, quando o usuário clicar no botão de adicionar a tarefa\n  const handleCreateNewTask = (event) => {\n    event.preventDefault();\n    setListaDeTarefas([...listaDeTarefas, {\n      title: taskTitle, isDone: false,\n    }]);\n\n    localStorage.setItem(\n      'lista-de-tarefas',\n      JSON.stringify([...listaDeTarefas, {\n        title: taskTitle, isDone: false,\n      }])\n    );\n\n    setTaskTitle(\"\");\n  }\n\n  const handleRemoveTask = (indiceTarefa) => {\n    const novaListaDeTarefas = listaDeTarefas.filter((tarefa, index) => {\n      return index !== indiceTarefa;\n    });\n\n    setListaDeTarefas(novaListaDeTarefas);\n    localStorage.setItem('lista-de-tarefas', JSON.stringify(novaListaDeTarefas) );\n  }\n\n  const handleChangeTaskStatus = (indiceTarefa) => {\n    const newTarefas = listaDeTarefas.map((tarefa, index) => {\n      return index === indiceTarefa\n        ? { ...tarefa, isDone: !tarefa.isDone }\n        : tarefa;\n    })\n\n    setListaDeTarefas(newTarefas)\n  }\n\n  return (\n    <TodoListContext.Provider value={ {\n      taskTitle,\n      setTaskTitle,\n      handleCreateNewTask,\n      listaDeTarefas,\n      handleRemoveTask,\n      handleChangeTaskStatus,\n    } }>\n      { props.children }\n    </TodoListContext.Provider>\n  )\n}\n\nexport default TodoListProvider;","import React, { useContext } from 'react';\n\nimport { FaCheck } from 'react-icons/fa';\nimport { TodoListContext } from '../contexts/TodoListContext';\n\nimport '../styles/Header.css';\n\nconst Header = () => {\n  const { taskTitle, setTaskTitle, handleCreateNewTask } = useContext(TodoListContext);\n\n  return (\n    <header className=\"main-header\">\n      <div className=\"header-content\">\n        <h1>MyTodo</h1>\n\n        <form onSubmit={handleCreateNewTask}>\n          <input\n            type=\"text\"\n            className=\"input\"\n            value={taskTitle}\n            onChange={(event) => { setTaskTitle(event.target.value) }}\n          />\n\n          <button\n            type=\"button\"\n            className=\"btn-add-task\"\n            onClick={handleCreateNewTask}\n          >\n              <FaCheck />\n          </button>\n        </form>\n      </div>\n    </header>\n  )\n}\n\nexport default Header;","import React, { useContext } from 'react';\n\nimport { IoTrashOutline } from 'react-icons/io5';\nimport { TodoListContext } from '../contexts/TodoListContext';\n\nimport '../styles/TasksList.css';\n\nconst TasksList = () => {\n  const {\n    listaDeTarefas,\n    handleRemoveTask,\n    handleChangeTaskStatus,\n  } = useContext(TodoListContext);\n\n  return (\n    <div className=\"container\">\n      <div className=\"tasks\">\n        <h2>Minhas Tarefas</h2>\n\n        <ul className=\"list\">\n          { listaDeTarefas.map((tarefa, index) => (\n            <li key={index}>\n              <input\n                type=\"checkbox\"\n                value={tarefa.isDone}\n                onChange={() => handleChangeTaskStatus(index)}\n                />\n\n              <input\n                type=\"text\"\n                className={`${tarefa.isDone ? 'risked' : ''}`}\n                value={tarefa.title}\n                readOnly={true}\n              />\n\n              <button\n                onClick={() => handleRemoveTask(index)}\n              >\n                <IoTrashOutline />\n              </button>\n            </li>\n          )) }\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default TasksList;","import Header from './components/Header';\nimport TasksList from './components/TasksList';\nimport TodoListProvider from './contexts/TodoListContext';\n\nimport './styles/global.css';\n\nfunction App() {\n  return (\n    <TodoListProvider>\n      <Header />\n      <TasksList />\n    </TodoListProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}